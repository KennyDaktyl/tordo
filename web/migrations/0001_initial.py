# Generated by Django 4.1.3 on 2022-11-27 12:16

from django.conf import settings
import django.contrib.gis.db.models.fields
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Category",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                (
                    "number",
                    models.IntegerField(
                        blank=True,
                        default=0,
                        null=True,
                        verbose_name="Numer kategorii",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        max_length=128, verbose_name="Nazwa kategorii"
                    ),
                ),
                (
                    "slug",
                    models.SlugField(
                        blank=True,
                        max_length=128,
                        null=True,
                        verbose_name="Slug",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True, verbose_name="Czy jest dostępny"
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "Kategorie produktów",
                "ordering": ("number", "name"),
            },
        ),
        migrations.CreateModel(
            name="Product",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                (
                    "name",
                    models.CharField(
                        max_length=128, verbose_name="Nazwa produktu"
                    ),
                ),
                (
                    "slug",
                    models.SlugField(
                        blank=True,
                        max_length=128,
                        null=True,
                        verbose_name="Slug",
                    ),
                ),
                (
                    "price",
                    models.DecimalField(
                        decimal_places=2,
                        default=0,
                        max_digits=7,
                        verbose_name="Cena podstawowa brutto",
                    ),
                ),
                (
                    "tax",
                    models.IntegerField(
                        choices=[(1, "0%"), (2, "7%"), (3, "23%")],
                        verbose_name="Faktura",
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        blank=True, null=True, verbose_name="Opis produktu"
                    ),
                ),
                (
                    "image_listing_jpg",
                    models.ImageField(
                        blank=True,
                        null=True,
                        upload_to="products",
                        validators=[
                            django.core.validators.FileExtensionValidator(
                                allowed_extensions=["jpg", "png"]
                            )
                        ],
                        verbose_name="Zdjęcie na listing 170x113",
                    ),
                ),
                (
                    "image_basket_jpg",
                    models.ImageField(
                        blank=True,
                        null=True,
                        upload_to="products",
                        validators=[
                            django.core.validators.FileExtensionValidator(
                                allowed_extensions=["jpg", "png"]
                            )
                        ],
                        verbose_name="Zdjęcie na koszyk 430x173",
                    ),
                ),
                (
                    "thumbnails_cache",
                    models.JSONField(blank=True, default=dict, null=True),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True, verbose_name="Czy jest dostępny"
                    ),
                ),
                (
                    "category",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="web.category",
                        verbose_name="Typ produktu",
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "Produkty",
                "ordering": ("name",),
            },
        ),
        migrations.CreateModel(
            name="Restaurant",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_time",
                    models.DateTimeField(
                        db_index=True, default=django.utils.timezone.now
                    ),
                ),
                (
                    "modified_time",
                    models.DateTimeField(auto_now=True, db_index=True),
                ),
                (
                    "name",
                    models.CharField(
                        max_length=100, verbose_name="Nazwa restauracji"
                    ),
                ),
                (
                    "slug",
                    models.SlugField(
                        blank=True,
                        max_length=128,
                        null=True,
                        verbose_name="Slug",
                    ),
                ),
                (
                    "location",
                    django.contrib.gis.db.models.fields.PointField(srid=4326),
                ),
                (
                    "street",
                    models.CharField(max_length=128, verbose_name="Ulica"),
                ),
                (
                    "house",
                    models.CharField(max_length=8, verbose_name="Nr domu"),
                ),
                (
                    "door",
                    models.CharField(
                        blank=True,
                        max_length=8,
                        null=True,
                        verbose_name="Nr lokalu",
                    ),
                ),
                (
                    "city",
                    models.CharField(max_length=64, verbose_name="Miasto"),
                ),
                (
                    "post_code",
                    models.CharField(
                        blank=True,
                        max_length=6,
                        null=True,
                        verbose_name="Kod pocztowy",
                    ),
                ),
                (
                    "is_located",
                    models.BooleanField(
                        default=False, verbose_name="Lokalizacja Geo API"
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True, verbose_name="Czy aktywna?"
                    ),
                ),
                (
                    "geo_data",
                    models.TextField(
                        blank=True,
                        null=True,
                        verbose_name="Dane z geolokalizacji",
                    ),
                ),
                (
                    "home_page",
                    models.URLField(
                        default="www.brak-strony.pl", verbose_name="Strona WWW"
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        blank=True, null=True, verbose_name="Opis restauracji"
                    ),
                ),
                (
                    "likes_counter",
                    models.IntegerField(
                        default=0, verbose_name="Licznik lików"
                    ),
                ),
                (
                    "image_listing_photo",
                    models.ImageField(
                        blank=True,
                        null=True,
                        upload_to="restaurants",
                        validators=[
                            django.core.validators.FileExtensionValidator(
                                allowed_extensions=["jpg", "png"]
                            )
                        ],
                        verbose_name="Zdjęcie na listing 200x170",
                    ),
                ),
                (
                    "image_logo_photo",
                    models.ImageField(
                        blank=True,
                        null=True,
                        upload_to="restaurants",
                        validators=[
                            django.core.validators.FileExtensionValidator(
                                allowed_extensions=["jpg", "png"]
                            )
                        ],
                        verbose_name="Logo 170x170",
                    ),
                ),
                (
                    "image_main_photo_desktop",
                    models.ImageField(
                        blank=True,
                        null=True,
                        upload_to="restaurants",
                        validators=[
                            django.core.validators.FileExtensionValidator(
                                allowed_extensions=["jpg", "png"]
                            )
                        ],
                        verbose_name="Zdjęcie główne desktop 1920x834",
                    ),
                ),
                (
                    "image_main_photo_mobile",
                    models.ImageField(
                        blank=True,
                        null=True,
                        upload_to="restaurants",
                        validators=[
                            django.core.validators.FileExtensionValidator(
                                allowed_extensions=["jpg", "png"]
                            )
                        ],
                        verbose_name="Zdjęcie główne mobile 360x378",
                    ),
                ),
                (
                    "thumbnails_cache",
                    models.JSONField(blank=True, default=dict, null=True),
                ),
            ],
            options={
                "verbose_name_plural": "Restauracje",
                "ordering": ("name",),
            },
        ),
        migrations.CreateModel(
            name="Tag",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
            ],
            options={
                "verbose_name_plural": "Tagi",
                "ordering": ("name",),
            },
        ),
        migrations.CreateModel(
            name="Thumbnail",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                ("photo", models.ImageField(upload_to="thumbs")),
                (
                    "mimetype",
                    models.CharField(max_length=16, verbose_name="Typ pliku"),
                ),
                (
                    "width",
                    models.IntegerField(default=0, verbose_name="Szerokość"),
                ),
                (
                    "height",
                    models.IntegerField(default=0, verbose_name="Wysokość"),
                ),
                (
                    "status",
                    models.IntegerField(
                        choices=[
                            (0, "Logotyp restauracji"),
                            (1, "Zdjęcie główne restauracji desktop"),
                            (12, "Zdjęcie główne restauracji mobile"),
                            (2, "Listing restauracji"),
                            (3, "Galeria restauracji"),
                            (4, "Zdjęcie główne produktu desktop"),
                            (5, "Listing produktu"),
                            (6, "Zdjęcie na koszyk produktu"),
                            (7, "Galeria produktu"),
                        ],
                        db_index=True,
                        verbose_name="Status użytkownika",
                    ),
                ),
                (
                    "product_id",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="web.product",
                        verbose_name="Produkt",
                    ),
                ),
                (
                    "restaurant_id",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="web.restaurant",
                        verbose_name="Restauracja",
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "Thumbnails",
                "ordering": ("photo",),
            },
        ),
        migrations.CreateModel(
            name="RestaurantMenu",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                (
                    "product",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="product_menu",
                        to="web.product",
                        verbose_name="Produkt w menu",
                    ),
                ),
                (
                    "restaurant",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="restaurant_menu",
                        to="web.restaurant",
                        verbose_name="Restauracja",
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "Menu restauracji",
                "ordering": ("restaurant", "product__category__number"),
            },
        ),
        migrations.AddField(
            model_name="restaurant",
            name="tags",
            field=models.ManyToManyField(
                blank=True,
                related_name="restaurant_tags",
                to="web.tag",
                verbose_name="Rodzaje kochni: (many)",
            ),
        ),
        migrations.AddField(
            model_name="restaurant",
            name="user",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.CreateModel(
            name="OpeningHours",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "weekday",
                    models.IntegerField(
                        choices=[
                            (1, "Poniedziałek"),
                            (2, "Wtorek"),
                            (3, "Środa"),
                            (4, "Czwartek"),
                            (5, "Piątek"),
                            (6, "Sobota"),
                            (7, "Niedziela"),
                        ]
                    ),
                ),
                (
                    "from_hour",
                    models.TimeField(verbose_name="Godzina otwarcia"),
                ),
                (
                    "to_hour",
                    models.TimeField(verbose_name="Godzina zamknięcia"),
                ),
                (
                    "default_hours",
                    models.BooleanField(
                        default=False, verbose_name="Godziny default-owe"
                    ),
                ),
                (
                    "restaurant",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="web.restaurant",
                        verbose_name="Godziny otwarcia restauracji",
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "Godziny otwarcia restauracji",
                "ordering": ("weekday", "from_hour"),
                "unique_together": {
                    ("restaurant", "weekday", "from_hour", "to_hour")
                },
            },
        ),
    ]
